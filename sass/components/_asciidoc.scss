@import "foundation/components/grid";
@import "foundation/components/type";
@import "foundation/components/panels";
@import "foundation/components/tables";
$old-include-html-global-classes: $include-html-global-classes;
$include-html-global-classes: false;
$inline-list-bottom-margin: $paragraph-margin-bottom / 2 !default;
@import "foundation/components/inline-lists";
$include-html-global-classes: $old-include-html-global-classes;

// controls whether built-in AsciiDoc role classes are generated
$include-asciidoc-role-classes: true !default;

// fall-through defaults
$subheader-text-rendering: $header-text-rendering !default;
$footer-bg: $body-font-color !default;
$footer-font-color: invert($body-font-color) !default;

body {
  //-webkit-font-smoothing: $font-smoothing;
  @extend .antialiased;
}

@if $anchor-text-decoration-hover {
  a:hover, a:focus {
    text-decoration: $anchor-text-decoration-hover;
  }
}

.clearfix,
.float-group {
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

*:not(pre) > code {
//code {
  font-size: $code-font-size;
  padding: $code-padding;
  white-space: nowrap;
  // FIXME only add background color if not inherit; only add border if not 0; only add radius if using border or background color
  background-color: $code-bg-color;
  border: $code-border-size $code-border-style $code-border-color;
  @include radius;
  text-shadow: none;
  line-height: $code-line-height;
}

pre, pre > code {
  line-height: $pre-line-height;
  // this overrides what was set on code
  color: $pre-font-color;
  font-family: $pre-font-family;
  font-weight: normal;
}

// if we need to trump the code settings
//pre > code {
//  font-size: 1em;
//  white-space: inherit;
//  color: $pre-font-color;
//  font-family: $pre-font-family;
//  padding: 0;
//  background: none;
//  font-weight: normal;
//  border: none;
//}

.keyseq {
  color: lighten($body-font-color, 20%);
}

kbd:not(.keyseq) {
  display: inline-block;
  color: $body-font-color;
  font-size: emCalc(12px);
  line-height: 1.4;
  background-color: #f7f7f7;
  //border: 1px solid $pre-border-color;
  border: 1px solid #ccc;
  @include radius(3px);
  @include box-shadow(0 1px 0 rgba(0, 0, 0, .2), 0 0 0 2px white inset);
  margin: -0.15em 0.15em 0 0.15em;
  padding: 0.2em 0.6em 0.2em 0.5em;
  vertical-align: middle;
  white-space: nowrap;
}

.keyseq kbd:first-child {
  margin-left: 0;
}

.keyseq kbd:last-child {
  margin-right: 0;
}

.menuseq, .menu {
  color: darken($body-font-color, 10%);
}

b.button:before, b.button:after {
  position: relative;
  top: -1px;
  font-weight: normal;
}

b.button:before {
  content: "[";
  padding: 0 3px 0 2px;
}

b.button:after {
  content: "]";
  padding: 0 2px 0 3px;
}

@if $anchor-text-decoration != none {
  // this makes the underline the same as the text color
  p a > code {
    //text-decoration: $anchor-text-decoration;

    // this makes the color darken to act like other links
    &:hover {
      color: darken($code-color, 5%);
    }
  }

  // hack to prevent text from being underlined when inside a link
  // can be replaced with a! > code in CSS 4
  //p a > code {
  //  display: inline-block;
  //  height: 1.45em;
  //  padding-top: 0;
  //  padding-bottom: 0;
  //}

  //@if $code-bg-color != inherit {
  //  a > code {
  //    border-bottom: 1px solid $anchor-font-color;
  //  }

  //  a > code:hover {
  //    //background-color: darken($code-bg-color, 5%);
  //    border-bottom: 1px solid $anchor-font-color-hover;
  //  }
  //}
}

#header,
#content,
#footnotes,
#footer {
  @include grid-row;
  @include grid-column($float:false);
}

#content:before {
  content: none;
}

#header {
  // should this be changed to padding-bottom?
  margin-bottom: $panel-margin-bottom * 2;
  & > h1 {
    color: $title-font-color;
    font-weight: $title-font-weight;
    border-bottom: $hr-border-width $hr-border-style $hr-border-color;
    margin-bottom: -28px;
    padding-bottom: 32px;
  }

  span {
    color: $blockquote-font-color;
  }

  #revnumber {
    text-transform: capitalize;
  }

  br {
    display: none;

    & + span {
      padding-left: 3px;
    }

    & + span:before {
      content: "\2013 \0020";
    }

    & + span.author {
      padding-left: 0;
    }

    & + span.author:before {
      content: ", ";
    }
  }
}

#toc {
  //margin-bottom: $panel-margin-bottom * 2;
  border-bottom: $sect-divider-size $sect-divider-style $sect-divider-color;
  padding-top: 1em;
  padding-bottom: $panel-margin-bottom;
  & > ul {
    //margin-left: 0;
    margin-left: emCalc(4px);
  }
  ul.sectlevel0 > li > a {
    font-style: italic; 
  }
  ul.sectlevel0 ul.sectlevel1 {
    margin-left: 0;
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  ul {
    font-family: $header-font-family;
    list-style-type: none;
  }
  a {
    text-decoration: none;
    &:active {
      text-decoration: underline;
    }
  }
}

#toctitle {
  @extend h3;
  color: $subheader-font-color;
}

@media #{$small} {
  body.toc2 {
    padding-left: 15em;
    padding-right: 0;
  }

  #toc.toc2 {
    background-color: $panel-bg;
    position: fixed;
    width: 15em;
    left: 0;
    top: 0;
    // why not panel border color?
    border-right: 1px solid $sect-divider-color;
    border-bottom: 0;
    z-index: 1000;
    padding: 1.25em 1em;
    height: 100%;
    overflow: auto;
    #toctitle {
      margin-top: 0;
      font-size: 1.2em;
    }
    & > ul {
      font-size: .90em;
      margin-bottom: 0;
    }
    ul ul {
      margin-left: 0;
      padding-left: $list-nested-margin * .8;
    }
    ul.sectlevel0 ul.sectlevel1 {
      padding-left: 0;
      margin-top: 0.5em;
      margin-bottom: 0.5em;
    }
  }

  body.toc2.toc-right {
    padding-left: 0;
    padding-right: 15em;

    #toc.toc2 {
      border-right: 0;
      border-left: 1px solid $sect-divider-color;
      left: auto;
      right: 0;
    }
  }
}

@media #{$medium} {
  body.toc2 {
    padding-left: 20em;
    padding-right: 0;
  }

  #toc.toc2 {
    width: 20em;

    #toctitle {
      font-size: 1.375em;
    }

    & > ul {
      font-size: 0.95em;
    }

    ul ul {
      padding-left: $list-nested-margin;
    }
  }

  body.toc2.toc-right {
    padding-left: 0;
    padding-right: 20em;
  }
}

// toc within content
#content #toc {
  @include panel($panel-bg, $panel-padding, false);
  border-width: 0;
  @include radius;
}

#content #toctitle {
  @extend %subheader;
  font-size: 1.375em;
}

#footer {
  max-width: 100%;
  //margin-top: $panel-margin-bottom * 2;
  background-color: $footer-bg;
  padding: $panel-padding;
}

#footer-text {
  color: $footer-font-color;
  line-height: $paragraph-line-height * .9;
}

.sect1 {
  padding-bottom: $panel-margin-bottom;
}

.sect1 + .sect1 {
  border-top: $sect-divider-size $sect-divider-style $sect-divider-color;
}

#content #{headers()} {
  & > a.anchor {
    position: absolute;
    width: 1em;
    margin-left: -1em;
    display: block;
    text-decoration: none;
    visibility: hidden;
    text-align: center;
    font-weight: normal;

    &:before {
      content: '\00A7';
      font-size: .85em;
      vertical-align: text-top;
      display: block;
      margin-top: 0.05em;
    }
  }

  &:hover > a.anchor,
  & > a.anchor:hover {
    visibility: visible;
  }

  & > a.link {
    color: $header-font-color;
    text-decoration: none;
    &:hover {
      color: darken($header-font-color, 5%);
    }
  }
}

// AsciiDoc block styles

// these blocks that don't inherit panel styles
.audioblock,
.imageblock,
.literalblock,
.listingblock,
.stemblock,
.verseblock,
.videoblock {
  margin-bottom: $panel-margin-bottom;
}

.admonitionblock td.content,
.audioblock,
.exampleblock,
.imageblock,
.listingblock,
.literalblock,
.stemblock,
.openblock,
.paragraph,
.quoteblock,
table.tableblock,
.verseblock,
.videoblock,
.dlist,
.olist,
.ulist,
.qlist,
.hdlist {
  & > .title {
    @extend %subheader;
    text-rendering: $subheader-text-rendering;
    text-align: left;
    @if $caption-font-family != inherit {
      font-family: $caption-font-family;
    }
    @if $caption-font-weight != inherit {
      font-weight: $caption-font-weight;
    }
    @if $caption-font-style != inherit {
      font-style: $caption-font-style;
    }
  }
}

// trick to prevent wrapping? wat? why not max-width: 100%?
table.tableblock > caption.title {
  white-space: nowrap;
  overflow: visible;
  max-width: 0;
}

// for now just allow title to be aligned for imageblock, might add others later
// TODO might want to support auto-sizing content so title aligns to edge of content
//.imageblock {
//  &.text-center > .title {
//    text-align: center !important;
//  }
//
//  &.text-right > .title {
//    text-align: right !important;
//  }
//}

.paragraph.lead > p,
#preamble > .sectionbody > .paragraph:first-of-type p {
  @extend %lead;
}

// nested AsciiDoc document (should put "nested" class on surrounding div)
table.tableblock #preamble > .sectionbody > .paragraph:first-of-type p {
  font-size: inherit;
}

.admonitionblock > table {
  border: 0;
  background: none;
  width: 100%;
  td.icon {
    text-align: center;
    width: 80px;
    img {
      max-width: none;
    }
    .title {
      font-weight: $header-font-weight;
      text-transform: uppercase;
    }
  }

  td.content {
    padding-left: emCalc(18px);
    padding-right: emCalc(20px);
    border-left: $hr-border-width $hr-border-style $hr-border-color; 
    color: $blockquote-font-color;
    // QUESTION use opacity instead of blockquote-font-color?
    //opacity: 0.75;

    //& > .paragraph:last-child > p {
    & > :last-child > :last-child {
      margin-bottom: 0;
    }
  }
}

.exampleblock > .content {
  @include panel($body-bg);
  @include radius;
  //& > :last-child > :last-child,
  //// argh, review!
  //.olist > ol > li:last-child > :last-child,
  //.ulist > ul > li:last-child > :last-child,
  //.qlist > ol > li:last-child > :last-child {
  //  margin-bottom: 0;
  //}
}

.exampleblock.result > .content {
  @include single-box-shadow($panel-border-color, 0, 1px, 8px); 
}

.sidebarblock {
  @include panel;
  @include radius;

  & > .content {
    & > .title {
      @extend h3;
      color: $subheader-font-color;
      //color: darken($header-font-color, 15%); // name this panel-header-color?
      margin-top: 0;
      line-height: $paragraph-line-height;
      @if $sidebar-header-border-size != 0 {
        border-width: $sidebar-header-border-size;
        border-style: $sidebar-header-border-style;
        border-color: $sidebar-header-border-color;
      }
    }
  }
}

.exampleblock > .content,
.sidebarblock > .content {
  // FIXME argh, review!
  & > :last-child > :last-child,
  .olist > ol > li:last-child > :last-child,
  .ulist > ul > li:last-child > :last-child,
  .qlist > ol > li:last-child > :last-child {
    margin-bottom: 0;
  }
}

// GitHub-like look
//.literalblock, .listingblock {
//  background-color: #EEE;
//  border: 1px solid #CCC;
//  font-family: $code-font-family;
//  color: #000;
//  padding: .8em 0 .8em .8em;
//  margin-bottom: 1.3em;
//  overflow: auto;
//  @include radius;
//
//  pre {
//    margin: 0px;
//    font-size: .9em;
//    line-height: 1.4em;
//    white-space: prewrap;
//  }
//}

.literalblock,
.listingblock {
  & pre:not([class]) {
    background: $pre-bg;
  }
  & pre, & pre[class] {
    border-width: $pre-border-size;
    @if $pre-border-size != 0 {
      border-style: $pre-border-style;
      border-color: $pre-border-color;
      @include border-radius($global-radius);
    }
    padding: $pre-padding;
    word-wrap: break-word;

    &.nowrap {
      overflow-x: auto;
      white-space: pre;
      word-wrap: normal;
    }
    
    & > code {
      display: block;
    }

    @media #{$screen} {
      //font-size: $em-base * 0.75;
      //font-size: 12px;
      //padding: emCalc(12px);

      font-size: $pre-font-size * .8; 
    }

    @media #{$small} {
      //font-size: $em-base * 0.875;
      //font-size: 14px;
      //padding: emCalc(14px);

      font-size: $pre-font-size * .9;
    }

    @media #{$medium} {
      //font-size: emCalc(16px);

      font-size: $pre-font-size;
    }
  }
}

.listingblock pre.highlight {
  padding: 0;
  & > code {
    padding: $pre-padding;
  }
}

.listingblock > .content {
  // if the floating language text a place to drop anchor
  position: relative;
}

.listingblock:hover code[class*=" language-"]:before {
  text-transform: uppercase;
  font-size: 0.9em;
  color: #999;

  //float: right;
  //or
  position: absolute;
  top: emCalc(6px);
  right: emCalc(6px);

  // use the next three styles to "cover-up"
  //position: relative;
  //background: $pre-bg;
  //padding: 0 emCalc(12px);
}

@mixin language-label($lang) {
  code.#{$lang}:before {
    content: quote($lang);
  }
}

.listingblock:hover {
  @include language-label(asciidoc);
  @include language-label(clojure);
  @include language-label(css);
  @include language-label(go);
  @include language-label(groovy);
  @include language-label(html);
  @include language-label(java);
  @include language-label(javascript);
  @include language-label(python);
  @include language-label(ruby);
  @include language-label(sass);
  @include language-label(scss);
  @include language-label(xml);
  @include language-label(yaml);
}

.listingblock.terminal pre .command:before {
  content: attr(data-prompt); 
  padding-right: 0.5em;
  color: #999;
}

.listingblock.terminal pre .command:not([data-prompt]):before {
  content: '$'; 
}

// Overrides for Pygments default styles
table.pyhltable {
  border: 0;
  margin-bottom: 0;
}

table.pyhltable td {
  vertical-align: top;
  padding-top: 0;
  padding-bottom: 0;
}

table.pyhltable td.code {
  padding-left: .75em;
  padding-right: 0;
}

.highlight.pygments .lineno,
table.pyhltable td:not(.code) {
  color: #999;
  padding-left: 0;
  padding-right: .5em;
  border-right: 1px solid $hr-border-color;
}

.highlight.pygments .lineno {
  display: inline-block;
  margin-right: .25em;
}

table.pyhltable .linenodiv {
  background-color: transparent !important;
  padding-right: 0 !important;
}

// AsciiDoc quoteblock output is different from what Foundation expects
.quoteblock {
  margin: 0 0 $paragraph-margin-bottom 0;
  padding: $blockquote-padding;
  border-#{$default-float}: $blockquote-border;

  blockquote {
    margin: 0 0 $paragraph-margin-bottom 0;
    padding: 0 0 emCalc(10px) 0;
    border: 0;

    & > .paragraph:last-child p {
      margin-bottom: 0;
    }
  }

  .attribution {
    margin-top: emCalc(-10px);
    padding-bottom: emCalc(10px);
    font-size: $blockquote-cite-font-size;
    color: $blockquote-cite-font-color;
    line-height: $paragraph-line-height;
    br {
      display: none;
    }
    cite {
      display: block;
    }
  }
}

table.tableblock {
  max-width: 100%;
  td .paragraph:last-child p,
  th, td {
    & > p:last-child {
      margin-bottom: 0;
    }
  }
}

table.spread {
  width: 100%;
}

// NOTE .grid-* selectors must be defined before .frame-* selectors in order for styles to cascade properly
table.tableblock,
th.tableblock,
td.tableblock {
  border: 0 solid $table-border-color;
}

table.grid-all th.tableblock,
table.grid-all td.tableblock {
  border-width: 0 $table-border-size $table-border-size 0;
}

table.grid-all tfoot > tr > th.tableblock,
table.grid-all tfoot > tr > td.tableblock {
  border-width: $table-border-size $table-border-size 0 0;
}

table.grid-cols th.tableblock,
table.grid-cols td.tableblock {
  border-width: 0 $table-border-size 0 0;
}

table.grid-all * > tr > .tableblock:last-child,
table.grid-cols * > tr > .tableblock:last-child {
  border-right-width: 0;
}

table.grid-rows th.tableblock,
table.grid-rows td.tableblock {
  border-width: 0 0 $table-border-size 0;
}

table.grid-all tbody > tr:last-child > th.tableblock,
table.grid-all tbody > tr:last-child > td.tableblock,
table.grid-all thead:last-child > tr > th.tableblock,
table.grid-rows tbody > tr:last-child > th.tableblock,
table.grid-rows tbody > tr:last-child > td.tableblock,
table.grid-rows thead:last-child > tr > th.tableblock {
  border-bottom-width: 0;
}

table.grid-rows tfoot > tr > th.tableblock,
table.grid-rows tfoot > tr > td.tableblock {
  border-width: $table-border-size 0 0 0;
}

table.frame-all {
  border-width: $table-border-size;
}

table.frame-sides {
  border-width: 0 $table-border-size;
}

table.frame-topbot {
  border-width: $table-border-size 0;
}

@each $halign in (left, right, center) {
  th.halign-#{$halign},
  td.halign-#{$halign} {
    text-align: $halign;
  }
}

@each $valign in (top, bottom, middle) {
  th.valign-#{$valign},
  td.valign-#{$valign} {
    vertical-align: $valign;
  }
}

// FIX Foundation, user-agent stylesheet is overriding
table thead th,
table tfoot th {
  font-weight: $table-head-font-weight;
}

// vertical table header (block)
tbody tr th {
  display: $table-display;
  line-height: $table-line-height;
  background: $table-head-bg;
}

// vertical table header (content)
tbody tr th,
tfoot tr th {
  &, p {
    color: $table-head-font-color;
    font-weight: $table-head-font-weight;
  }
}

td > div.verse {
  white-space: pre;
}

// AsciiDoc list styles

ol {
  margin-left: $list-side-margin + emCalc(4px);
}

ul li ol {
  margin-left: $list-side-margin;
}

dl dd {
  margin-left: $definition-list-content-margin-left;
}

// argh
dl dd:last-child,
dl dd:last-child > :last-child {
  margin-bottom: 0;
}

ol > li p,
ul > li p,
ul dd,
ol dd,
.olist .olist,
.ulist .ulist,
.ulist .olist,
.olist .ulist {
  margin-bottom: $paragraph-margin-bottom / 2;
}

ul.unstyled,
ol.unnumbered,
ul.checklist,
ul.none {
  list-style-type: none;
}

ul.unstyled,
ol.unnumbered,
ul.checklist {
  margin-left: emCalc(10px);
}

// give the checkbox some room
ul.checklist li > p:first-child > .fa-check-square-o:first-child,
ul.checklist li > p:first-child > input[type="checkbox"]:first-child {
  margin-right: 0.25em;
}

ul.checklist li > p:first-child > input[type="checkbox"]:first-child {
  position: relative;
  top: 1px;
}

ul.inline {
  @include inline-list;
}

// used when you need to style the term inline
// or should we name it "natural"?
.unstyled dl dt {
  font-weight: normal;
  font-style: normal;
}

@mixin ordered-list-type($class, $type) {
  ol.#{$class} {
    list-style-type: #{$type};
  }
}

@include ordered-list-type(arabic, decimal);
@include ordered-list-type(decimal, decimal-leading-zero);
@include ordered-list-type(loweralpha, lower-alpha);
@include ordered-list-type(upperalpha, upper-alpha);
@include ordered-list-type(lowerroman, lower-roman);
@include ordered-list-type(upperroman, upper-roman);
@include ordered-list-type(lowergreek, lower-greek);
//@include ordered-list-type(armenian, armenian);
//@include ordered-list-type(georgian, georgian);

.hdlist > table,
.colist > table {
  border: 0;
  background: none;
  & > tbody > tr {
    background: none;
  }
}

td.hdlist1 {
  padding-right: .75em;
  font-weight: bold;
}

td.hdlist1,
td.hdlist2 {
  vertical-align: top;
}

.literalblock + .colist,
.listingblock + .colist {
  margin-top: -0.5em;
}

.colist > table {
  tr > td:first-of-type {
    padding: 0 .75em;
    line-height: 1;
  }

  tr > td:last-of-type {
    padding: emCalc(4px) 0;
  }
}

.qanda > ol > li > p > em:only-child {
  color: darken($primary-color, 5%);
}

// picked from foundation/components/_thumbs.css
.thumb,
.th {
  line-height: 0;
  display: inline-block;
  border: $thumb-border-style $thumb-border-width $thumb-border-color;
  @if $experimental {
    -webkit-box-shadow: $thumb-box-shadow;
  }
  box-shadow: $thumb-box-shadow;
}

.imageblock {
  &.left,
  &[style*="float: left"] {
    margin: emCalc(4px) emCalc(10px) $panel-margin-bottom 0;
  }
  &.right,
  &[style*="float: right"] {
    margin: emCalc(4px) 0 $panel-margin-bottom emCalc(10px);
  }

  & > .title {
    margin-bottom: 0;
  }

  &.thumb,
  &.th {
    border-width: $thumb-border-width + ($thumb-border-width * .5);
    & > .title {
      padding: 0 emCalc(2px);
    }
  }
}

.image {
  // QUESTION should we require the related role?
  // "related" mean "illustrative" or "supporting" of the text
  //&.related,
  //&.rel {
  //}

  &.left,
  &.right {
    margin-top: emCalc(4px);
    margin-bottom: emCalc(4px);
    display: inline-block;
    line-height: 0;
  }

  &.left {
    margin-right: emCalc(10px);
  }

  &.right {
    margin-left: emCalc(10px);
  }
}

a.image {
  text-decoration: none;
}

// AsciiDoc footnote styles
span.footnote,
span.footnoteref {
  vertical-align: super;
  font-size: emCalc(14px);
  a {
    text-decoration: none;
    &:active {
      text-decoration: underline;
    }
  }
}

#footnotes {
  padding-top: emCalc(12px);
  padding-bottom: emCalc(12px);
  margin-bottom: $panel-margin-bottom / 2;
  hr {
    width: 20%;
    min-width: emCalc(100px);
    margin: -.25em 0 .75em 0;
    border-width: 1px 0 0 0;
  }
  .footnote {
    padding: 0 emCalc(6px);
    line-height: 1.3;
    font-size: emCalc(14px);
    margin-left: 1.2em;
    text-indent: -1.2em;
    margin-bottom: .2em;
    a:first-of-type {
      font-weight: bold;
      text-decoration: none;
    }
  }

  .footnote:last-of-type {
    margin-bottom: 0;
  }
}

// footnotes in embedded documents
#content #footnotes {
  margin-top: -$panel-margin-bottom / 2;
  margin-bottom: 0;
  padding: emCalc(12px) 0;
}

// for embedded gists
.gist .file-data > table {
  border: none;
  background: #fff;
  width: 100%;
  margin-bottom: 0;
  td.line-data {
    width: 99%;
  }
}

// AsciiDoc built-in roles
@if $include-asciidoc-role-classes {
  div.unbreakable {
    page-break-inside: avoid;
  }

  .big {
    font-size: larger;
  }
  
  .small {
    font-size: smaller;
  }

  @each $decoration in (underline, overline, line-through) {
    .#{$decoration} {
      text-decoration: $decoration;
    }
  }

  // colors must be quoted or else they may get converted to hex in compression output mode
  @each $color in ('aqua', 'black', 'blue', 'fuchsia', 'gray', 'green', 'lime', 'maroon', 'navy', 'olive', 'purple', 'red', 'silver', 'teal', 'white', 'yellow') {
    .#{$color} {
      color: scale-color(string-to-color($color), $lightness: $rainbow-lightness);
    }
  
    .#{$color}-background {
      background-color: scale-color(string-to-color($color), $lightness: $rainbow-bg-lightness);
    }
  }

  //*:not(code) > .comment {
  //  background: yellow;
  //}
}
