@import "../../fonts/font-awesome-4";

span.icon > [class^="icon-"],
span.icon > [class*=" icon-"] {
  @include fa;
  cursor: default;
}

.admonitionblock td.icon {
  [class^="icon-"]:before {
    @include fa;
    font-size: 2.5em;
    text-shadow: $icon-text-shadow;
    cursor: default;
  }
  
  .icon-note:before {
//    @extend .fa-thumb-tack:before;
    //content: "\f08d";
    //color: scale-color(green, $lightness: $rainbow-lightness);

    @include fa-info-circle;
    //color: scale-color(mediumblue, $lightness: $rainbow-lightness);
    color: $primary-color;
    color: scale-color($primary-color, $lightness: $rainbow-lightness);
  }
  
  .icon-tip:before {
    // @extend .icon-info-sign;
    //content: "\f05a";
    //color: scale-color(mediumblue, $lightness: $rainbow-lightness);
    @include fa-lightbulb-o;
    //color: scale-color(yellow, $lightness: $rainbow-lightness);
    //color: scale-color(yellow, $saturation: -15%);
    //color: $primary-color;
    text-shadow: 1px 1px 2px rgba(155, 155, 0, .8);
    color: #111;
  }
  
  .icon-warning:before {
    @include fa-exclamation-triangle;
    color: scale-color(darkorange, $lightness: $rainbow-lightness);
  }

  .icon-caution:before {
    @include fa-fire;
    color: scale-color(orangered, $lightness: $rainbow-lightness);
  }
  
  .icon-important:before {
    @include fa-exclamation-circle;
    color: scale-color(red, $lightness: $rainbow-lightness);
  }
}

// alternatively could use &#10122; through &#10131 to get the numbered circles,
// then style them as appropriate; would need to output them in the text, though
.conum {
  display: inline-block;
  color: white !important;
  background-color: $body-font-color;
  @include border-radius(100px);
  text-align: center;
  width: 20px;
  height: 20px;
  font-size: 12px;
  font-weight: bold;
  line-height: 20px;
  font-family: Arial, sans-serif;
  font-style: normal;
  position: relative;
  top: -2px;
  letter-spacing: -1px;

  & * {
    color: white !important;
  }

  & + b {
    display: none;
  }

  &:after {
    content: attr(data-value);
  }

  // hack for when highlight.js adds a bogus element into DOM
  // we could solve this w/ javascript instead
  &:not([data-value]):empty {
    display: none;
  }
}

// NOTE now done by consuming comment when matching callout syntax
//pre .comment .conum {
//  // coverup the comment
//  left: -20px;
//}
